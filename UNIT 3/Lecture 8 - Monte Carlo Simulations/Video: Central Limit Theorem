-outcomes of roulette wheel are uniformly distributed
-why does empirical work
-because we are reasoning not about 1 spin, but a mean of spins
-central limit theorem applies

Central Limit Theorem (CLT)
Given a sufficiently large sample:
1. means of the samples in a set of samples (sample means), will be approximately normally distributed
2. normal distributions will have a mean close to mean of population
3. variance of the sample means will be close to variance of population divided by sample size

Checking CLT

def plotMeans(numDice, numRolls, numBins, legend, color, style):
    means = []
    for i in range(numRolls//numDice):
        vals = 0
        for j in range(numDice):
            vals += 5*random.random() 
        means.append(vals/float(numDice))
    pylab.hist(means, numBins, color = color, label = legend,
               weights = pylab.array(len(means)*[1])/len(means),
               hatch = style)
    return getMeanAndStd(means)

# mean, std = plotMeans(1, 1000000, 19, '1 die', 'b', '*')
# print('Mean of rolling 1 die =', str(mean) + ',', 'Std =', std)
# mean, std = plotMeans(50, 1000000, 19, 'Mean of 50 dice', 'r', '//')
# print('Mean of rolling 50 dice =', str(mean) + ',', 'Std =', std)
# pylab.title('Rolling Continuous Dice')
# pylab.xlabel('Value')
# pylab.ylabel('Probability')
# pylab.legend()

# L = [1, 1, 1, 1, 2]
# pylab.hist(L)
# factor = pylab.array(len(L)*[1])/len(L)
# print(factor)
# pylab.figure()
# pylab.hist(L, weights = factor)

numTrials = 50000
numSpins = 200
game = FairRoulette()

means = []
for i in range(numTrials):
    means.append(findPocketReturn(game, 1,
                                  numSpins)[0]/numSpins)

pylab.hist(means, bins = 19,
           weights = pylab.array(len(means)*[1])/len(means))
pylab.xlabel('Mean Return')
pylab.ylabel('Probability')
pylab.title('Expected Return Betting a Pocket')

Moral
-doesn't matter what shape of distribution of values happens to be
 -if we're trying to estimate mean of population using sufficiently large samples
 -CLT allows us to use empirical rule when computing confidence intervals
 
